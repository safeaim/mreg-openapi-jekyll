{
  "openapi" : "3.0.2",
  "info" : { },
  "servers" : [ {
    "url" : "/"
  } ],
  "paths" : {
    "/api/v1/hostpolicy/atoms/" : {
      "get" : {
        "operationId" : "listHostPolicyAtoms",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "operationId" : "createHostPolicyAtom",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyAtom"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyAtom"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyAtom"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostPolicyAtom"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/hostpolicy/atoms/{name}" : {
      "delete" : {
        "operationId" : "destroyHostPolicyAtom",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "operationId" : "retrieveHostPolicyAtom",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostPolicyAtom"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "operationId" : "partialUpdateHostPolicyAtom",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyAtom"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyAtom"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyAtom"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostPolicyAtom"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateHostPolicyAtom",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyAtom"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyAtom"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyAtom"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostPolicyAtom"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/hostpolicy/roles/" : {
      "get" : {
        "operationId" : "listHostPolicyRoles",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_1"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "operationId" : "createHostPolicyRole",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyRole"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyRole"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyRole"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostPolicyRole"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/hostpolicy/roles/{name}" : {
      "delete" : {
        "operationId" : "destroyHostPolicyRole",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "operationId" : "retrieveHostPolicyRole",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostPolicyRole"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "operationId" : "partialUpdateHostPolicyRole",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyRole"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyRole"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyRole"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostPolicyRole"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateHostPolicyRole",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyRole"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyRole"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyRole"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostPolicyRole"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/hostpolicy/roles/{name}/atoms/" : {
      "get" : {
        "description" : "Lists all atom members for a hostpolicy role.",
        "operationId" : "listHostPolicyAtoms",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "description" : "Adds a new atom member to a hostpolicy role.",
        "operationId" : "createHostPolicyAtom",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyAtom"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyAtom"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyAtom"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostPolicyAtom"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/hostpolicy/roles/{name}/atoms/{atom}" : {
      "delete" : {
        "description" : "Remove the specified atom membership.",
        "operationId" : "destroyHostPolicyAtom",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "atom",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "description" : "Returns details for the specified atom member.",
        "operationId" : "retrieveHostPolicyAtom",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "atom",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostPolicyAtom"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "description" : "Not allowed.",
        "operationId" : "partialUpdateHostPolicyAtom",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "atom",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyAtom"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyAtom"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyAtom"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostPolicyAtom"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateHostPolicyAtom",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "atom",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyAtom"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyAtom"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostPolicyAtom"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostPolicyAtom"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/hostpolicy/roles/{name}/hosts/" : {
      "get" : {
        "description" : "Lists all host members for a hostpolicy role.",
        "operationId" : "listHostNames",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "description" : "Adds a new host member to a hostpolicy role.",
        "operationId" : "createHostName",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostName"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostName"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostName"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostName"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/hostpolicy/roles/{name}/hosts/{host}" : {
      "delete" : {
        "description" : "Remove the specified host membership.",
        "operationId" : "destroyHostName",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "host",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "description" : "Returns details for the specified host member.",
        "operationId" : "retrieveHostName",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "host",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostName"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "description" : "Not allowed.",
        "operationId" : "partialUpdateHostName",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "host",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostName"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostName"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostName"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostName"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateHostName",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "host",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostName"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostName"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostName"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostName"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/bacnet/ids/" : {
      "get" : {
        "operationId" : "listBACnetIDs",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_3"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "operationId" : "createBACnetID",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BACnetID"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/BACnetID"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/BACnetID"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BACnetID"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/bacnet/ids/{id}" : {
      "delete" : {
        "operationId" : "destroyBACnetID",
        "parameters" : [ {
          "description" : "A unique value identifying this ba cnet id.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "operationId" : "retrieveBACnetID",
        "parameters" : [ {
          "description" : "A unique value identifying this ba cnet id.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BACnetID"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "operationId" : "partialUpdateBACnetID",
        "parameters" : [ {
          "description" : "A unique value identifying this ba cnet id.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BACnetID"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/BACnetID"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/BACnetID"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BACnetID"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateBACnetID",
        "parameters" : [ {
          "description" : "A unique value identifying this ba cnet id.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BACnetID"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/BACnetID"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/BACnetID"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BACnetID"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/cnames/" : {
      "get" : {
        "description" : "Lists all cnames / aliases.",
        "operationId" : "listCnames",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "description" : "Creates a new cname.",
        "operationId" : "createCname",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Cname"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Cname"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Cname"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Cname"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/cnames/{name}" : {
      "delete" : {
        "description" : "Delete the specified cname.",
        "operationId" : "destroyCname",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "description" : "Returns details for the specified cname.",
        "operationId" : "retrieveCname",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Cname"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "description" : "Update parts of the cname.",
        "operationId" : "partialUpdateCname",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Cname"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Cname"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Cname"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Cname"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateCname",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Cname"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Cname"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Cname"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Cname"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/dhcphosts/ipv4/" : {
      "get" : {
        "operationId" : "listTxts",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_5"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/dhcphosts/ipv6/" : {
      "get" : {
        "operationId" : "listTxts",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_5"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/dhcphosts/ipv6byipv4/{ip}/{range}" : {
      "get" : {
        "operationId" : "retrieveDhcpHostsV4ByV6",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "ip",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "range",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : { }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/dhcphosts/ipv6byipv4/" : {
      "get" : {
        "operationId" : "listDhcpHostsV4ByV6s",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : { },
                  "type" : "array"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/dhcphosts/{ip}/{range}" : {
      "get" : {
        "operationId" : "retrieveTxt",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "ip",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "range",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Txt"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/hinfos/" : {
      "get" : {
        "description" : "Lists all hinfos.",
        "operationId" : "listHinfos",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_6"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "description" : "Creates a new hinfo.",
        "operationId" : "createHinfo",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Hinfo"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Hinfo"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Hinfo"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Hinfo"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/hinfos/{host}" : {
      "delete" : {
        "description" : "Delete a hinfo.",
        "operationId" : "destroyHinfo",
        "parameters" : [ {
          "description" : "A unique value identifying this hinfo.",
          "explode" : false,
          "in" : "path",
          "name" : "host",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "description" : "Returns details for a hinfo.",
        "operationId" : "retrieveHinfo",
        "parameters" : [ {
          "description" : "A unique value identifying this hinfo.",
          "explode" : false,
          "in" : "path",
          "name" : "host",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Hinfo"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "description" : "Update parts of a hinfo.",
        "operationId" : "partialUpdateHinfo",
        "parameters" : [ {
          "description" : "A unique value identifying this hinfo.",
          "explode" : false,
          "in" : "path",
          "name" : "host",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Hinfo"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Hinfo"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Hinfo"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Hinfo"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateHinfo",
        "parameters" : [ {
          "description" : "A unique value identifying this hinfo.",
          "explode" : false,
          "in" : "path",
          "name" : "host",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Hinfo"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Hinfo"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Hinfo"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Hinfo"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/history/" : {
      "get" : {
        "operationId" : "listHistorys",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/history/{id}" : {
      "get" : {
        "operationId" : "retrieveHistory",
        "parameters" : [ {
          "description" : "A unique integer value identifying this history.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/History"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/hosts/" : {
      "get" : {
        "description" : "Lists all hostnames.",
        "operationId" : "listHosts",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_8"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "description" : "Create a new host object. Allows posting with IP address in data.",
        "operationId" : "createHost",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Host"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Host"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Host"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Host"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/hosts/{name}" : {
      "delete" : {
        "description" : "Delete the specified host.",
        "operationId" : "destroyHost",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "description" : "Returns details for the specified host. Includes relations like IP address/a-records, ptr-records, cnames.",
        "operationId" : "retrieveHost",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Host"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "description" : "Update parts of the host.",
        "operationId" : "partialUpdateHost",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Host"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Host"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Host"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Host"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateHost",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Host"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Host"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Host"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Host"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/hostgroups/" : {
      "get" : {
        "description" : "Lists all hostgroups in use.",
        "operationId" : "listHostGroups",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_9"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "description" : "Creates a new hostgroup object.",
        "operationId" : "createHostGroup",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroup"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroup"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroup"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostGroup"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/hostgroups/{name}" : {
      "delete" : {
        "description" : "Delete the specified hostgroup.",
        "operationId" : "destroyHostGroup",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "description" : "Returns details for the specified hostgroup. Includes hostgroups that are members.",
        "operationId" : "retrieveHostGroup",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostGroup"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "description" : "Updates part of hostgroup.",
        "operationId" : "partialUpdateHostGroup",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroup"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroup"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroup"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostGroup"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateHostGroup",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroup"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroup"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroup"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostGroup"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/hostgroups/{name}/groups/" : {
      "get" : {
        "description" : "Lists all hostgroup members for a hostgroup.",
        "operationId" : "listHostGroups",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_9"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "description" : "Adds a new hostgroup member to a hostgroup.",
        "operationId" : "createHostGroup",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroup"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroup"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroup"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostGroup"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/hostgroups/{name}/groups/{group}" : {
      "delete" : {
        "description" : "Delete the specified hostgroup member.",
        "operationId" : "destroyHostGroup",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "group",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "description" : "Returns details for the specified hostgroup member.",
        "operationId" : "retrieveHostGroup",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "group",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostGroup"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "description" : "Not allowed.",
        "operationId" : "partialUpdateHostGroup",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "group",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroup"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroup"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroup"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostGroup"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateHostGroup",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "group",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroup"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroup"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostGroup"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostGroup"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/hostgroups/{name}/hosts/" : {
      "get" : {
        "description" : "Lists all host members for a hostgroup.",
        "operationId" : "listHostNames",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "description" : "Adds a new host member to a hostgroup.",
        "operationId" : "createHostName",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostName"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostName"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostName"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostName"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/hostgroups/{name}/hosts/{host}" : {
      "delete" : {
        "description" : "Delete the specified host member.",
        "operationId" : "destroyGroup",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "host",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "description" : "Returns details for the specified host member.",
        "operationId" : "retrieveGroup",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "host",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "description" : "Not allowed.",
        "operationId" : "partialUpdateGroup",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "host",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateGroup",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "host",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/hostgroups/{name}/owners/" : {
      "get" : {
        "description" : "Lists all owners for a hostgroup.",
        "operationId" : "listGroups",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_10"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "description" : "Adds a new owner to a hostgroup.",
        "operationId" : "createGroup",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/hostgroups/{name}/owners/{owner}" : {
      "delete" : {
        "description" : "Delete the specified host owner.",
        "operationId" : "destroyGroup",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "owner",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "description" : "Returns details for the specified host owner.",
        "operationId" : "retrieveGroup",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "owner",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "description" : "Not allowed.",
        "operationId" : "partialUpdateGroup",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "owner",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateGroup",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "owner",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/ipaddresses/" : {
      "get" : {
        "description" : "Lists all ipaddresses in use.",
        "operationId" : "listIpaddress",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_11"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "description" : "Creates a new ipaddress object. Requires an existing host.",
        "operationId" : "createIpaddress",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ipaddress"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ipaddress"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ipaddress"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ipaddress"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/ipaddresses/{id}" : {
      "delete" : {
        "description" : "Delete the specified ipaddress.",
        "operationId" : "destroyIpaddress",
        "parameters" : [ {
          "description" : "A unique integer value identifying this ipaddress.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "description" : "Returns details for the specified Ipaddress object by {id}.",
        "operationId" : "retrieveIpaddress",
        "parameters" : [ {
          "description" : "A unique integer value identifying this ipaddress.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ipaddress"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "description" : "Update parts of the ipaddress.",
        "operationId" : "partialUpdateIpaddress",
        "parameters" : [ {
          "description" : "A unique integer value identifying this ipaddress.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ipaddress"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ipaddress"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ipaddress"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ipaddress"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateIpaddress",
        "parameters" : [ {
          "description" : "A unique integer value identifying this ipaddress.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ipaddress"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ipaddress"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ipaddress"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ipaddress"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/labels/" : {
      "get" : {
        "operationId" : "listLabels",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_12"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "operationId" : "createLabel",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Label"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Label"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Label"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Label"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/labels/{id}" : {
      "delete" : {
        "description" : "Delete a Label.",
        "operationId" : "destroyLabel",
        "parameters" : [ {
          "description" : "A unique integer value identifying this label.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "description" : "Returns details for a Label.",
        "operationId" : "retrieveLabel",
        "parameters" : [ {
          "description" : "A unique integer value identifying this label.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Label"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "description" : "Update parts of a Label.",
        "operationId" : "partialUpdateLabel",
        "parameters" : [ {
          "description" : "A unique integer value identifying this label.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Label"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Label"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Label"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Label"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateLabel",
        "parameters" : [ {
          "description" : "A unique integer value identifying this label.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Label"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Label"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Label"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Label"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/labels/name/{name}" : {
      "delete" : {
        "operationId" : "destroyLabel",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "operationId" : "retrieveLabel",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Label"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "operationId" : "partialUpdateLabel",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Label"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Label"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Label"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Label"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateLabel",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Label"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Label"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Label"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Label"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/locs/" : {
      "get" : {
        "description" : "Lists all LOCs.",
        "operationId" : "listLocs",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_13"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "description" : "Creates a new LOC.",
        "operationId" : "createLoc",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Loc"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Loc"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Loc"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Loc"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/locs/{host}" : {
      "delete" : {
        "description" : "Delete a LOC.",
        "operationId" : "destroyLoc",
        "parameters" : [ {
          "description" : "A unique value identifying this loc.",
          "explode" : false,
          "in" : "path",
          "name" : "host",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "description" : "Returns details for a LOC.",
        "operationId" : "retrieveLoc",
        "parameters" : [ {
          "description" : "A unique value identifying this loc.",
          "explode" : false,
          "in" : "path",
          "name" : "host",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Loc"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "description" : "Update parts of a LOC.",
        "operationId" : "partialUpdateLoc",
        "parameters" : [ {
          "description" : "A unique value identifying this loc.",
          "explode" : false,
          "in" : "path",
          "name" : "host",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Loc"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Loc"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Loc"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Loc"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateLoc",
        "parameters" : [ {
          "description" : "A unique value identifying this loc.",
          "explode" : false,
          "in" : "path",
          "name" : "host",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Loc"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Loc"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Loc"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Loc"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/mxs/" : {
      "get" : {
        "description" : "Returns a list of all MX-records.",
        "operationId" : "listMxs",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_14"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "description" : "Create a new MX-record.",
        "operationId" : "createMx",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Mx"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Mx"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Mx"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Mx"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/mxs/{id}" : {
      "delete" : {
        "description" : "Deletes a MX-record.",
        "operationId" : "destroyMx",
        "parameters" : [ {
          "description" : "A unique integer value identifying this mx.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "description" : "List details for a MX-record.",
        "operationId" : "retrieveMx",
        "parameters" : [ {
          "description" : "A unique integer value identifying this mx.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Mx"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "description" : "Update parts of a MX-record.",
        "operationId" : "partialUpdateMx",
        "parameters" : [ {
          "description" : "A unique integer value identifying this mx.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Mx"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Mx"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Mx"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Mx"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateMx",
        "parameters" : [ {
          "description" : "A unique integer value identifying this mx.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Mx"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Mx"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Mx"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Mx"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/naptrs/" : {
      "get" : {
        "description" : "List all Naptr-records.",
        "operationId" : "listNaptrs",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_15"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "description" : "Create a new Naptr-record.",
        "operationId" : "createNaptr",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Naptr"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Naptr"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Naptr"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Naptr"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/naptrs/{id}" : {
      "delete" : {
        "description" : "Delete the specified Naptr-record.",
        "operationId" : "destroyNaptr",
        "parameters" : [ {
          "description" : "A unique integer value identifying this naptr.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "description" : "Returns details for the specified Naptr-record.",
        "operationId" : "retrieveNaptr",
        "parameters" : [ {
          "description" : "A unique integer value identifying this naptr.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Naptr"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "description" : "Update parts of the specified Naptr-record.",
        "operationId" : "partialUpdateNaptr",
        "parameters" : [ {
          "description" : "A unique integer value identifying this naptr.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Naptr"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Naptr"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Naptr"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Naptr"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateNaptr",
        "parameters" : [ {
          "description" : "A unique integer value identifying this naptr.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Naptr"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Naptr"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Naptr"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Naptr"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/nameservers/" : {
      "get" : {
        "description" : "List all nameserver-records.",
        "operationId" : "listNameServers",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_16"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "description" : "Create a new nameserver-record.",
        "operationId" : "createNameServer",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NameServer"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/NameServer"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/NameServer"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NameServer"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/nameservers/{name}" : {
      "delete" : {
        "description" : "Delete the specified nameserver-record.",
        "operationId" : "destroyNameServer",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "description" : "Returns details for the specified nameserver-record.",
        "operationId" : "retrieveNameServer",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NameServer"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "description" : "Update parts of the specified nameserver-record.",
        "operationId" : "partialUpdateNameServer",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NameServer"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/NameServer"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/NameServer"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NameServer"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateNameServer",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NameServer"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/NameServer"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/NameServer"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NameServer"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/ptroverrides/" : {
      "get" : {
        "description" : "List all ptr-overrides.",
        "operationId" : "listPtrOverrides",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_17"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "description" : "Create a new ptr-override.",
        "operationId" : "createPtrOverride",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PtrOverride"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PtrOverride"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/PtrOverride"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PtrOverride"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/ptroverrides/{id}" : {
      "delete" : {
        "description" : "Delete the specified ptr-override.",
        "operationId" : "destroyPtrOverride",
        "parameters" : [ {
          "description" : "A unique integer value identifying this ptr override.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "description" : "Returns details for the specified ptr-override.",
        "operationId" : "retrievePtrOverride",
        "parameters" : [ {
          "description" : "A unique integer value identifying this ptr override.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PtrOverride"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "description" : "Update parts of the specified ptr-override.",
        "operationId" : "partialUpdatePtrOverride",
        "parameters" : [ {
          "description" : "A unique integer value identifying this ptr override.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PtrOverride"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PtrOverride"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/PtrOverride"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PtrOverride"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updatePtrOverride",
        "parameters" : [ {
          "description" : "A unique integer value identifying this ptr override.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PtrOverride"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/PtrOverride"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/PtrOverride"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PtrOverride"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/sshfps/" : {
      "get" : {
        "description" : "List all sshfp records.",
        "operationId" : "listSshfps",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_18"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "description" : "Create a new sshfp record.",
        "operationId" : "createSshfp",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sshfp"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sshfp"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sshfp"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sshfp"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/sshfps/{id}" : {
      "delete" : {
        "description" : "Delete the specified sshfp.",
        "operationId" : "destroySshfp",
        "parameters" : [ {
          "description" : "A unique integer value identifying this sshfp.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "description" : "Returns details for the specified sshfp.",
        "operationId" : "retrieveSshfp",
        "parameters" : [ {
          "description" : "A unique integer value identifying this sshfp.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sshfp"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "description" : "Update parts of the specified sshfp.",
        "operationId" : "partialUpdateSshfp",
        "parameters" : [ {
          "description" : "A unique integer value identifying this sshfp.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sshfp"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sshfp"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sshfp"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sshfp"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateSshfp",
        "parameters" : [ {
          "description" : "A unique integer value identifying this sshfp.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sshfp"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sshfp"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sshfp"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sshfp"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/srvs/" : {
      "get" : {
        "description" : "List all service records.",
        "operationId" : "listSrvs",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_19"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "description" : "Create a new service record.",
        "operationId" : "createSrv",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Srv"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/srvs/{id}" : {
      "delete" : {
        "description" : "Delete the specified service record.",
        "operationId" : "destroySrv",
        "parameters" : [ {
          "description" : "A unique integer value identifying this srv.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "description" : "Returns details for the specified srvice record.",
        "operationId" : "retrieveSrv",
        "parameters" : [ {
          "description" : "A unique integer value identifying this srv.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Srv"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "description" : "Update parts of the specified service record.",
        "operationId" : "partialUpdateSrv",
        "parameters" : [ {
          "description" : "A unique integer value identifying this srv.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Srv"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateSrv",
        "parameters" : [ {
          "description" : "A unique integer value identifying this srv.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Srv"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/networks/" : {
      "get" : {
        "operationId" : "listNetworks",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_20"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "description" : "Create a new network. The new network can't overlap with any existing networks.",
        "operationId" : "createNetwork",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Network"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Network"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Network"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Network"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/networks/ip/{ip}" : {
      "get" : {
        "operationId" : "retrievenetwork_by_ip",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "ip",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : { }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/networks/{network}" : {
      "delete" : {
        "description" : "Deletes a network unless it has IP addresses that are still in use",
        "operationId" : "destroyNetwork",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "network",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "description" : "List details for a network.",
        "operationId" : "retrieveNetwork",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "network",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Network"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "description" : "Partially update a network.",
        "operationId" : "partialUpdateNetwork",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "network",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Network"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Network"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Network"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Network"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateNetwork",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "network",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Network"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Network"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Network"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Network"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/networks/{network}/excluded_ranges/" : {
      "get" : {
        "operationId" : "listNetworkExcludedRanges",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "network",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_21"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "description" : "Create a new excluded range for a network.",
        "operationId" : "createNetworkExcludedRange",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "network",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetworkExcludedRange"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetworkExcludedRange"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetworkExcludedRange"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkExcludedRange"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/networks/{network}/excluded_ranges/{id}" : {
      "delete" : {
        "description" : "Deletes an excluded range.",
        "operationId" : "destroyNetworkExcludedRange",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "network",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "description" : "List details for an excluded range.",
        "operationId" : "retrieveNetworkExcludedRange",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "network",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkExcludedRange"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "description" : "Partially update an excluded range.",
        "operationId" : "partialUpdateNetworkExcludedRange",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "network",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetworkExcludedRange"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetworkExcludedRange"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetworkExcludedRange"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkExcludedRange"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateNetworkExcludedRange",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "network",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetworkExcludedRange"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetworkExcludedRange"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetworkExcludedRange"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkExcludedRange"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/networks/{network}/first_unused" : {
      "get" : {
        "operationId" : "listnetwork_first_unuseds",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "network",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : { },
                  "type" : "array"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/networks/{network}/random_unused" : {
      "get" : {
        "operationId" : "listnetwork_random_unuseds",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "network",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : { },
                  "type" : "array"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/networks/{network}/ptroverride_list" : {
      "get" : {
        "operationId" : "listnetwork_ptroverride_lists",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "network",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : { },
                  "type" : "array"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/networks/{network}/ptroverride_host_list" : {
      "get" : {
        "operationId" : "listnetwork_ptroverride_host_lists",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "network",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : { },
                  "type" : "array"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/networks/{network}/reserved_list" : {
      "get" : {
        "operationId" : "listnetwork_reserved_lists",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "network",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : { },
                  "type" : "array"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/networks/{network}/used_count" : {
      "get" : {
        "operationId" : "listnetwork_used_counts",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "network",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : { },
                  "type" : "array"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/networks/{network}/used_list" : {
      "get" : {
        "operationId" : "listnetwork_used_lists",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "network",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : { },
                  "type" : "array"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/networks/{network}/used_host_list" : {
      "get" : {
        "operationId" : "listnetwork_used_host_lists",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "network",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : { },
                  "type" : "array"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/networks/{network}/unused_count" : {
      "get" : {
        "operationId" : "listnetwork_unused_counts",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "network",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : { },
                  "type" : "array"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/networks/{network}/unused_list" : {
      "get" : {
        "operationId" : "listnetwork_unused_lists",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "network",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : { },
                  "type" : "array"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/txts/" : {
      "get" : {
        "description" : "Returns a list of all txt-records.",
        "operationId" : "listTxts",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_5"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "description" : "Create a new txt-record.",
        "operationId" : "createTxt",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Txt"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Txt"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Txt"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Txt"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/txts/{id}" : {
      "delete" : {
        "description" : "Deletes a txt-record.",
        "operationId" : "destroyTxt",
        "parameters" : [ {
          "description" : "A unique integer value identifying this txt.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "description" : "List details for a txt-record.",
        "operationId" : "retrieveTxt",
        "parameters" : [ {
          "description" : "A unique integer value identifying this txt.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Txt"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "description" : "Update parts of a txt-record.",
        "operationId" : "partialUpdateTxt",
        "parameters" : [ {
          "description" : "A unique integer value identifying this txt.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Txt"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Txt"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Txt"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Txt"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateTxt",
        "parameters" : [ {
          "description" : "A unique integer value identifying this txt.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Txt"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Txt"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Txt"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Txt"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/zones/forward/" : {
      "get" : {
        "operationId" : "listForwardZones",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_22"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "operationId" : "createForwardZone",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZone"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZone"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZone"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForwardZone"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/zones/forward/hostname/{hostname}" : {
      "get" : {
        "description" : "Get which zone would match a hostname.\n\nNote the hostname does not need to exist as a Host.",
        "operationId" : "retrieveforward_zone_by_hostname",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "hostname",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : { }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/zones/forward/{name}" : {
      "delete" : {
        "operationId" : "destroyForwardZone",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "operationId" : "retrieveForwardZone",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForwardZone"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "operationId" : "partialUpdateForwardZone",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZone"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZone"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZone"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForwardZone"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateForwardZone",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZone"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZone"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZone"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForwardZone"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/zones/forward/{name}/delegations/" : {
      "get" : {
        "operationId" : "listForwardZoneDelegations",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_23"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "operationId" : "createForwardZoneDelegation",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZoneDelegation"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZoneDelegation"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZoneDelegation"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForwardZoneDelegation"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/zones/forward/{name}/delegations/{delegation}" : {
      "delete" : {
        "operationId" : "destroyForwardZoneDelegation",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "delegation",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "operationId" : "retrieveForwardZoneDelegation",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "delegation",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForwardZoneDelegation"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "operationId" : "partialUpdateForwardZoneDelegation",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "delegation",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZoneDelegation"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZoneDelegation"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZoneDelegation"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForwardZoneDelegation"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateForwardZoneDelegation",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "delegation",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZoneDelegation"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZoneDelegation"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZoneDelegation"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForwardZoneDelegation"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/zones/forward/{name}/nameservers" : {
      "delete" : {
        "operationId" : "destroyForwardZone",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "operationId" : "retrieveForwardZone",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForwardZone"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "operationId" : "partialUpdateForwardZone",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZone"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZone"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZone"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForwardZone"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateForwardZone",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZone"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZone"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForwardZone"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForwardZone"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/zones/reverse/" : {
      "get" : {
        "operationId" : "listReverseZones",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_24"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "operationId" : "createReverseZone",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZone"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZone"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZone"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReverseZone"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/zones/reverse/{name}" : {
      "delete" : {
        "operationId" : "destroyReverseZone",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "operationId" : "retrieveReverseZone",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReverseZone"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "operationId" : "partialUpdateReverseZone",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZone"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZone"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZone"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReverseZone"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateReverseZone",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZone"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZone"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZone"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReverseZone"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/zones/reverse/{name}/delegations/" : {
      "get" : {
        "operationId" : "listReverseZoneDelegations",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_25"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "operationId" : "createReverseZoneDelegation",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZoneDelegation"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZoneDelegation"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZoneDelegation"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReverseZoneDelegation"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/zones/reverse/{name}/delegations/{delegation}" : {
      "delete" : {
        "operationId" : "destroyReverseZoneDelegation",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "delegation",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "operationId" : "retrieveReverseZoneDelegation",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "delegation",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReverseZoneDelegation"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "operationId" : "partialUpdateReverseZoneDelegation",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "delegation",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZoneDelegation"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZoneDelegation"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZoneDelegation"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReverseZoneDelegation"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateReverseZoneDelegation",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "delegation",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZoneDelegation"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZoneDelegation"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZoneDelegation"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReverseZoneDelegation"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/zones/reverse/{name}/nameservers" : {
      "delete" : {
        "operationId" : "destroyReverseZone",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "operationId" : "retrieveReverseZone",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReverseZone"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "operationId" : "partialUpdateReverseZone",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZone"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZone"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZone"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReverseZone"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateReverseZone",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZone"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZone"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseZone"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReverseZone"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/zonefiles/{name}" : {
      "get" : {
        "description" : "Generate zonefile for a given zone.",
        "operationId" : "retrieveTxt",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Txt"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/permissions/netgroupregex/" : {
      "get" : {
        "operationId" : "listNetGroupRegexPermissions",
        "parameters" : [ {
          "description" : "A page number within the paginated result set.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of results to return per page.",
          "explode" : true,
          "in" : "query",
          "name" : "page_size",
          "required" : false,
          "schema" : {
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "A search term.",
          "explode" : true,
          "in" : "query",
          "name" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Which field to use when ordering the results.",
          "explode" : true,
          "in" : "query",
          "name" : "ordering",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_26"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "post" : {
        "operationId" : "createNetGroupRegexPermission",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetGroupRegexPermission"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetGroupRegexPermission"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetGroupRegexPermission"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetGroupRegexPermission"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/v1/permissions/netgroupregex/{id}" : {
      "delete" : {
        "operationId" : "destroyNetGroupRegexPermission",
        "parameters" : [ {
          "description" : "A unique integer value identifying this net group regex permission.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : { }
        },
        "tags" : [ "api" ]
      },
      "get" : {
        "operationId" : "retrieveNetGroupRegexPermission",
        "parameters" : [ {
          "description" : "A unique integer value identifying this net group regex permission.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetGroupRegexPermission"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "patch" : {
        "operationId" : "partialUpdateNetGroupRegexPermission",
        "parameters" : [ {
          "description" : "A unique integer value identifying this net group regex permission.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetGroupRegexPermission"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetGroupRegexPermission"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetGroupRegexPermission"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetGroupRegexPermission"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      },
      "put" : {
        "operationId" : "updateNetGroupRegexPermission",
        "parameters" : [ {
          "description" : "A unique integer value identifying this net group regex permission.",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetGroupRegexPermission"
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetGroupRegexPermission"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetGroupRegexPermission"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetGroupRegexPermission"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/token-logout/" : {
      "post" : {
        "operationId" : "createTokenLogout",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : { }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : { }
            },
            "multipart/form-data" : {
              "schema" : { }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : { }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    },
    "/api/token-auth/" : {
      "post" : {
        "operationId" : "createAuthToken",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthToken"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthToken"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthToken"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthToken"
                }
              }
            }
          }
        },
        "tags" : [ "api" ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "HostPolicyAtom" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "roles" : {
            "items" : {
              "$ref" : "#/components/schemas/HostPolicyAtom_roles"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "create_date" : {
            "format" : "date",
            "type" : "string"
          },
          "description" : {
            "maxLength" : 150,
            "type" : "string"
          },
          "name" : {
            "maxLength" : 64,
            "type" : "string"
          }
        },
        "required" : [ "description", "name" ],
        "type" : "object"
      },
      "HostPolicyRole" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "hosts" : {
            "items" : {
              "$ref" : "#/components/schemas/HostPolicyRole_hosts"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "atoms" : {
            "items" : {
              "$ref" : "#/components/schemas/HostPolicyAtom_roles"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "parent" : {
            "items" : {
              "$ref" : "#/components/schemas/HostPolicyAtom_roles"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "create_date" : {
            "format" : "date",
            "type" : "string"
          },
          "description" : {
            "maxLength" : 150,
            "type" : "string"
          },
          "name" : {
            "maxLength" : 64,
            "type" : "string"
          },
          "labels" : {
            "items" : {
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "required" : [ "description", "name" ],
        "type" : "object"
      },
      "HostName" : {
        "properties" : {
          "name" : {
            "maxLength" : 253,
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "BACnetID" : {
        "properties" : {
          "id" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "host" : {
            "type" : "integer"
          },
          "hostname" : {
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "host", "id" ],
        "type" : "object"
      },
      "Cname" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "maxLength" : 253,
            "type" : "string"
          },
          "ttl" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "nullable" : true,
            "type" : "integer"
          },
          "zone" : {
            "nullable" : true,
            "type" : "integer"
          },
          "host" : {
            "type" : "integer"
          }
        },
        "required" : [ "host", "name" ],
        "type" : "object"
      },
      "Txt" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "txt" : {
            "maxLength" : 4096,
            "type" : "string"
          },
          "host" : {
            "type" : "integer"
          }
        },
        "required" : [ "host", "txt" ],
        "type" : "object"
      },
      "Hinfo" : {
        "properties" : {
          "host" : {
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "cpu" : {
            "type" : "string"
          },
          "os" : {
            "type" : "string"
          }
        },
        "required" : [ "cpu", "host", "os" ],
        "type" : "object"
      },
      "History" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "timestamp" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "user" : {
            "maxLength" : 64,
            "type" : "string"
          },
          "resource" : {
            "maxLength" : 64,
            "type" : "string"
          },
          "name" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "model_id" : {
            "maximum" : 2147483647,
            "minimum" : 0,
            "type" : "integer"
          },
          "model" : {
            "maxLength" : 64,
            "type" : "string"
          },
          "action" : {
            "maxLength" : 64,
            "type" : "string"
          },
          "data" : {
            "type" : "object"
          }
        },
        "required" : [ "action", "data", "model", "model_id", "name", "resource", "user" ],
        "type" : "object"
      },
      "Host" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "ipaddresses" : {
            "items" : {
              "$ref" : "#/components/schemas/Host_ipaddresses"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "cnames" : {
            "items" : {
              "$ref" : "#/components/schemas/Host_cnames"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "mxs" : {
            "items" : {
              "$ref" : "#/components/schemas/Host_mxs"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "txts" : {
            "items" : {
              "$ref" : "#/components/schemas/Host_txts"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "ptr_overrides" : {
            "items" : {
              "$ref" : "#/components/schemas/Host_ptr_overrides"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "hinfo" : {
            "$ref" : "#/components/schemas/Host_hinfo"
          },
          "loc" : {
            "$ref" : "#/components/schemas/Host_loc"
          },
          "bacnetid" : {
            "$ref" : "#/components/schemas/Host_bacnetid"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "maxLength" : 253,
            "type" : "string"
          },
          "contact" : {
            "format" : "email",
            "maxLength" : 254,
            "type" : "string"
          },
          "ttl" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "nullable" : true,
            "type" : "integer"
          },
          "comment" : {
            "type" : "string"
          },
          "zone" : {
            "nullable" : true,
            "type" : "integer"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "HostGroup" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "parent" : {
            "items" : {
              "$ref" : "#/components/schemas/HostGroup_parent"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "groups" : {
            "items" : {
              "$ref" : "#/components/schemas/HostGroup_parent"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "hosts" : {
            "items" : {
              "$ref" : "#/components/schemas/HostPolicyRole_hosts"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "owners" : {
            "items" : {
              "$ref" : "#/components/schemas/HostGroup_owners"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "maxLength" : 50,
            "type" : "string"
          },
          "description" : {
            "maxLength" : 200,
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "Group" : {
        "properties" : {
          "name" : {
            "maxLength" : 150,
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "Ipaddress" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "macaddress" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "ipaddress" : {
            "type" : "string"
          },
          "host" : {
            "type" : "integer"
          }
        },
        "required" : [ "host", "ipaddress" ],
        "type" : "object"
      },
      "Label" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "maxLength" : 64,
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        },
        "required" : [ "description", "name" ],
        "type" : "object"
      },
      "Loc" : {
        "properties" : {
          "host" : {
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "loc" : {
            "type" : "string"
          }
        },
        "required" : [ "host", "loc" ],
        "type" : "object"
      },
      "Mx" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "priority" : {
            "maximum" : 2147483647,
            "minimum" : 0,
            "type" : "integer"
          },
          "mx" : {
            "maxLength" : 253,
            "type" : "string"
          },
          "host" : {
            "type" : "integer"
          }
        },
        "required" : [ "host", "mx", "priority" ],
        "type" : "object"
      },
      "Naptr" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "preference" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "order" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "flag" : {
            "maxLength" : 1,
            "type" : "string"
          },
          "service" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "regex" : {
            "maxLength" : 128,
            "type" : "string"
          },
          "replacement" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "host" : {
            "type" : "integer"
          }
        },
        "required" : [ "flag", "host", "order", "preference", "regex", "replacement", "service" ],
        "type" : "object"
      },
      "NameServer" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "maxLength" : 253,
            "type" : "string"
          },
          "ttl" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "nullable" : true,
            "type" : "integer"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "PtrOverride" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "ipaddress" : {
            "type" : "string"
          },
          "host" : {
            "type" : "integer"
          }
        },
        "required" : [ "host", "ipaddress" ],
        "type" : "object"
      },
      "Sshfp" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "ttl" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "nullable" : true,
            "type" : "integer"
          },
          "algorithm" : {
            "enum" : [ 1, 2, 3, 4 ],
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "hash_type" : {
            "enum" : [ 1, 2 ],
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "fingerprint" : {
            "maxLength" : 64,
            "type" : "string"
          },
          "host" : {
            "type" : "integer"
          }
        },
        "required" : [ "algorithm", "fingerprint", "hash_type", "host" ],
        "type" : "object"
      },
      "Srv" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "priority" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "weight" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "port" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "ttl" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "nullable" : true,
            "type" : "integer"
          },
          "zone" : {
            "nullable" : true,
            "type" : "integer"
          },
          "host" : {
            "type" : "integer"
          }
        },
        "required" : [ "host", "name", "port", "priority", "weight" ],
        "type" : "object"
      },
      "Network" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "excluded_ranges" : {
            "items" : {
              "$ref" : "#/components/schemas/Network_excluded_ranges"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "network" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "vlan" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "nullable" : true,
            "type" : "integer"
          },
          "dns_delegated" : {
            "type" : "boolean"
          },
          "category" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "frozen" : {
            "type" : "boolean"
          },
          "reserved" : {
            "maximum" : 2147483647,
            "minimum" : 0,
            "type" : "integer"
          }
        },
        "required" : [ "network" ],
        "type" : "object"
      },
      "NetworkExcludedRange" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "start_ip" : {
            "type" : "string"
          },
          "end_ip" : {
            "type" : "string"
          },
          "network" : {
            "type" : "integer"
          }
        },
        "required" : [ "end_ip", "network", "start_ip" ],
        "type" : "object"
      },
      "ForwardZone" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "nameservers" : {
            "items" : {
              "$ref" : "#/components/schemas/ForwardZone_nameservers"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated" : {
            "type" : "boolean"
          },
          "primary_ns" : {
            "maxLength" : 253,
            "type" : "string"
          },
          "email" : {
            "format" : "email",
            "maxLength" : 254,
            "type" : "string"
          },
          "serialno" : {
            "format" : "int64",
            "maximum" : 9223372036854775807,
            "minimum" : -9223372036854775808,
            "type" : "integer"
          },
          "serialno_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "refresh" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "retry" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "expire" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "soa_ttl" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "default_ttl" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "name" : {
            "maxLength" : 253,
            "type" : "string"
          }
        },
        "required" : [ "email", "name", "primary_ns" ],
        "type" : "object"
      },
      "ForwardZoneDelegation" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "nameservers" : {
            "items" : {
              "$ref" : "#/components/schemas/ForwardZone_nameservers"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "maxLength" : 253,
            "type" : "string"
          },
          "comment" : {
            "maxLength" : 200,
            "type" : "string"
          },
          "zone" : {
            "type" : "integer"
          }
        },
        "required" : [ "name", "zone" ],
        "type" : "object"
      },
      "ReverseZone" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "nameservers" : {
            "items" : {
              "$ref" : "#/components/schemas/ForwardZone_nameservers"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "network" : {
            "readOnly" : true,
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated" : {
            "type" : "boolean"
          },
          "primary_ns" : {
            "maxLength" : 253,
            "type" : "string"
          },
          "email" : {
            "format" : "email",
            "maxLength" : 254,
            "type" : "string"
          },
          "serialno" : {
            "format" : "int64",
            "maximum" : 9223372036854775807,
            "minimum" : -9223372036854775808,
            "type" : "integer"
          },
          "serialno_updated_at" : {
            "format" : "date-time",
            "type" : "string"
          },
          "refresh" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "retry" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "expire" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "soa_ttl" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "default_ttl" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "name" : {
            "maxLength" : 253,
            "type" : "string"
          }
        },
        "required" : [ "email", "name", "primary_ns" ],
        "type" : "object"
      },
      "ReverseZoneDelegation" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "nameservers" : {
            "items" : {
              "$ref" : "#/components/schemas/ForwardZone_nameservers"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "maxLength" : 253,
            "type" : "string"
          },
          "comment" : {
            "maxLength" : 200,
            "type" : "string"
          },
          "zone" : {
            "type" : "integer"
          }
        },
        "required" : [ "name", "zone" ],
        "type" : "object"
      },
      "NetGroupRegexPermission" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "group" : {
            "maxLength" : 80,
            "type" : "string"
          },
          "range" : {
            "type" : "string"
          },
          "regex" : {
            "maxLength" : 250,
            "type" : "string"
          },
          "labels" : {
            "items" : {
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "required" : [ "group", "range", "regex" ],
        "type" : "object"
      },
      "AuthToken" : {
        "properties" : {
          "username" : {
            "type" : "string",
            "writeOnly" : true
          },
          "password" : {
            "type" : "string",
            "writeOnly" : true
          },
          "token" : {
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "password", "username" ],
        "type" : "object"
      },
      "inline_response_200" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/HostPolicyAtom"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_1" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/HostPolicyRole"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_2" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/HostName"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_3" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/BACnetID"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_4" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/Cname"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_5" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/Txt"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_6" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/Hinfo"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_7" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/History"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_8" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/Host"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_9" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/HostGroup"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_10" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/Group"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_11" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/Ipaddress"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_12" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/Label"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_13" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/Loc"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_14" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/Mx"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_15" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/Naptr"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_16" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/NameServer"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_17" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/PtrOverride"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_18" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/Sshfp"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_19" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/Srv"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_20" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/Network"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_21" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/NetworkExcludedRange"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_22" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/ForwardZone"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_23" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/ForwardZoneDelegation"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_24" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/ReverseZone"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_25" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/ReverseZoneDelegation"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "inline_response_200_26" : {
        "properties" : {
          "count" : {
            "example" : 123,
            "type" : "integer"
          },
          "next" : {
            "example" : "http://api.example.org/accounts/?page=4",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "previous" : {
            "example" : "http://api.example.org/accounts/?page=2",
            "format" : "uri",
            "nullable" : true,
            "type" : "string"
          },
          "results" : {
            "items" : {
              "$ref" : "#/components/schemas/NetGroupRegexPermission"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "HostPolicyAtom_roles" : {
        "properties" : {
          "name" : {
            "maxLength" : 64,
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "HostPolicyRole_hosts" : {
        "properties" : {
          "name" : {
            "maxLength" : 253,
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "Host_ipaddresses" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "macaddress" : {
            "type" : "string"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "ipaddress" : {
            "type" : "string"
          },
          "host" : {
            "type" : "integer"
          }
        },
        "required" : [ "host", "ipaddress" ],
        "type" : "object"
      },
      "Host_cnames" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "maxLength" : 253,
            "type" : "string"
          },
          "ttl" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "nullable" : true,
            "type" : "integer"
          },
          "zone" : {
            "nullable" : true,
            "type" : "integer"
          },
          "host" : {
            "type" : "integer"
          }
        },
        "required" : [ "host", "name" ],
        "type" : "object"
      },
      "Host_mxs" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "priority" : {
            "maximum" : 2147483647,
            "minimum" : 0,
            "type" : "integer"
          },
          "mx" : {
            "maxLength" : 253,
            "type" : "string"
          },
          "host" : {
            "type" : "integer"
          }
        },
        "required" : [ "host", "mx", "priority" ],
        "type" : "object"
      },
      "Host_txts" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "txt" : {
            "maxLength" : 4096,
            "type" : "string"
          },
          "host" : {
            "type" : "integer"
          }
        },
        "required" : [ "host", "txt" ],
        "type" : "object"
      },
      "Host_ptr_overrides" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "ipaddress" : {
            "type" : "string"
          },
          "host" : {
            "type" : "integer"
          }
        },
        "required" : [ "host", "ipaddress" ],
        "type" : "object"
      },
      "Host_hinfo" : {
        "properties" : {
          "host" : {
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "cpu" : {
            "type" : "string"
          },
          "os" : {
            "type" : "string"
          }
        },
        "readOnly" : true,
        "required" : [ "cpu", "host", "os" ],
        "type" : "object"
      },
      "Host_loc" : {
        "properties" : {
          "host" : {
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "loc" : {
            "type" : "string"
          }
        },
        "readOnly" : true,
        "required" : [ "host", "loc" ],
        "type" : "object"
      },
      "Host_bacnetid" : {
        "properties" : {
          "id" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          }
        },
        "readOnly" : true,
        "required" : [ "id" ],
        "type" : "object"
      },
      "HostGroup_parent" : {
        "properties" : {
          "name" : {
            "maxLength" : 50,
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "HostGroup_owners" : {
        "properties" : {
          "name" : {
            "maxLength" : 150,
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "Network_excluded_ranges" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "start_ip" : {
            "type" : "string"
          },
          "end_ip" : {
            "type" : "string"
          },
          "network" : {
            "type" : "integer"
          }
        },
        "required" : [ "end_ip", "network", "start_ip" ],
        "type" : "object"
      },
      "ForwardZone_nameservers" : {
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "integer"
          },
          "created_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "updated_at" : {
            "format" : "date-time",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "maxLength" : 253,
            "type" : "string"
          },
          "ttl" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "nullable" : true,
            "type" : "integer"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      }
    }
  }
}